Algorithm-Feature 02: Update Old Student

a. Database Operations

    1. Connect to SQLite database.
    2. Create tables ("student", "lesson", "student_lesson") if they do not exist.
    3. Define SQL queries for checking and updating existing records.

b. Input Collection and Validation

    1. Ask User for Student ID to update.
        - If it doesn't exist or user enters 'c' or input is empty, stop the operation.
        - If it's not valid, keep asking until it's valid.
        _ If it's valid, prompt and ask User to select for update:
            1. First name
                - If any input is 'c' or it is empty, stop the operation.
                - If they have bad chars or less than 3 letters or more than 20 letters, raise error.
                - If they're not valid, keep asking until it's valid.
            2. Last name
                - If any input is 'c' or it is empty, stop the operation.
                - If they have bad chars or less than 3 letters or more than 20 letters, raise error.
                - If they're not valid, keep asking until it's valid.
            3. Age
                - If any input is 'c' or it is empty, stop the operation.
                - If it's not a number or not between 5 and 35, raise error.
                - If it's not valid, keep asking until it's valid.
            4. Grade
                - If any input is 'c' or it is empty, stop the operation.
                - If they have bad chars or less than 3 letters or more than 20 letters, raise error.
                - If they're not valid, keep asking until it's valid.
            5. Enrollment date
                - If any input is 'c' or it is empty, stop the operation.
                - If it's not matching (dd-MM-YYYY) format, raise error.
                - If it's not valid, keep asking until it's valid.
            6. Enrolled lessons
                - For each select lesson to update.
                    - If any input is 'c' or it is empty, stop the operation.
                    - If they have bad chars or less than 3 letters or more than 20 letters, raise error.
                    - If they're not valid, keep asking until it's valid.

c. Data Modification

    1. Update Student Record if the student ID already exists.
    2. Update Lesson Records for each lesson.
    3. Update Student-Lesson Associations by updating records in the "student_lesson" table.

d. Feedback

    1. Display Success Message if the update is successful.
    2. Display Error Message for validation errors or if the student ID doesn't exist.

e. Database Cleanup

    1. Commit changes to the database.
    2. Close the database connection.