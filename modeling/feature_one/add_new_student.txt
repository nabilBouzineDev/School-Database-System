Algorithm-Feature 01: Add New Student

a. Database Operations

    1. Connect to SQLite database.
    2. Create tables ("student", "lesson", "student_lesson") if they do not exist.
    3. Define SQL queries for creating tables, checking existence and inserting records.

b. Input Collection and Validation

    1. Ask User for Student ID:
        - If any input is 'c' or it is empty, stop the operation.
        - If already exists or not a number, raise error.
        - If it's not valid, keep asking until it's valid.

    2. Ask User for labels (first name, last name, grade, lesson name):
        - If any input is 'c' or it is empty, stop the operation.
        - If they have bad chars or less than 3 letters or more than 20 letters, raise error.
        - If they're not valid, keep asking until it's valid.

    3. Ask User for Age:
        - If any input is 'c' or it is empty, stop the operation.
        - If it's not a number or not between 5 and 35, raise error.
        - If it's not valid, keep asking until it's valid.

    4. Ask User for Enrollment date:
        - If any input is 'c' or it is empty, stop the operation.
        - If it's not matching (dd-MM-YYYY) format, raise error.
        - If it's not valid, keep asking until it's valid.

c. Data Insertion

    1. Insert Student Record If the student ID does not exist.
    2. Insert Lesson Records if lesson does not exist.
    3. Insert Student-Lesson Associations

d. Feedback

    1. Display Success Message if student added successfully.
    2. Display Error Message for validation errors or if the student ID already exist.

e. Database Cleanup

    1. Commit changes to the database.
    2. Close the database connection.